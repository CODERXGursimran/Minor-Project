{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project ALL\\\\project\\\\HE\\\\Minor-Project\\\\src\\\\components\\\\RentalsMap.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n/* , Marker*/\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RentalsMap(_ref) {\n  _s();\n\n  let {\n    locations,\n    google,\n    setHighLight,\n    Location\n  } = _ref;\n\n  /*, setHighLight*/\n  const [center, setCenter] = useState();\n  useEffect(() => {\n    var arr = Object.keys(locations);\n\n    var getLat = key => locations[key][\"lat\"];\n\n    var avgLat = arr.reduce((a, c) => a + Number(getLat(c)), 0) / arr.length;\n\n    var getLng = key => locations[key][\"lng\"];\n\n    var avgLng = arr.reduce((a, c) => a + Number(getLng(c)), 0) / arr.length;\n    setCenter({\n      lat: avgLat,\n      lng: avgLng\n    });\n  }, [locations]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: center && /*#__PURE__*/_jsxDEV(Map, {\n      google: google,\n      containerStyle: {\n        width: \"50vw\",\n        height: \"calc(100vh - 135px)\"\n      },\n      center: center,\n      initialCenter: locations[0],\n      zoom: 13,\n      disableDefaultUI: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(RentalsMap, \"C2EBt6N4G7Kn2nJMWP0ICRqh6y8=\");\n\n_c = RentalsMap;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAhp37ovli2YMXo6gxLQK2z8ZG91S3SgXM\"\n})(RentalsMap);\n\nvar _c;\n\n$RefreshReg$(_c, \"RentalsMap\");","map":{"version":3,"sources":["C:/Project ALL/project/HE/Minor-Project/src/components/RentalsMap.js"],"names":["React","Map","GoogleApiWrapper","Marker","useState","useEffect","RentalsMap","locations","google","setHighLight","Location","center","setCenter","arr","Object","keys","getLat","key","avgLat","reduce","a","c","Number","length","getLng","avgLng","lat","lng","width","height","apiKey"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,gBAAb,EAA+BC,MAA/B,QAA4C,mBAA5C;AAAiE;;AACjE,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,SAASC,UAAT,OAAkE;AAAA;;AAAA,MAA9C;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA;AAAlC,GAA8C;;AAAE;AAElE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,EAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYR,SAAZ,CAAV;;AACA,QAAIS,MAAM,GAAIC,GAAD,IAASV,SAAS,CAACU,GAAD,CAAT,CAAe,KAAf,CAAtB;;AACA,QAAIC,MAAM,GAAGL,GAAG,CAACM,MAAJ,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGE,MAAM,CAACN,MAAM,CAACK,CAAD,CAAP,CAA/B,EAA4C,CAA5C,IAAiDR,GAAG,CAACU,MAAlE;;AAEA,QAAIC,MAAM,GAAIP,GAAD,IAASV,SAAS,CAACU,GAAD,CAAT,CAAe,KAAf,CAAtB;;AACA,QAAIQ,MAAM,GAAGZ,GAAG,CAACM,MAAJ,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGE,MAAM,CAACE,MAAM,CAACH,CAAD,CAAP,CAA/B,EAA4C,CAA5C,IAAiDR,GAAG,CAACU,MAAlE;AAEAX,IAAAA,SAAS,CAAC;AAACc,MAAAA,GAAG,EAAER,MAAN;AAAcS,MAAAA,GAAG,EAAEF;AAAnB,KAAD,CAAT;AAED,GAVQ,EAUN,CAAClB,SAAD,CAVM,CAAT;AAYA,sBACE;AAAA,cACGI,MAAM,iBACL,QAAC,GAAD;AACA,MAAA,MAAM,EAAIH,MADV;AAEA,MAAA,cAAc,EAAI;AAChBoB,QAAAA,KAAK,EAAE,MADS;AAEhBC,QAAAA,MAAM,EAAE;AAFQ,OAFlB;AAMA,MAAA,MAAM,EAAIlB,MANV;AAOA,MAAA,aAAa,EAAIJ,SAAS,CAAC,CAAD,CAP1B;AAQA,MAAA,IAAI,EAAI,EARR;AASA,MAAA,gBAAgB,EAAI;AATpB;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAqBD;;GArCQD,U;;KAAAA,U;AAuCT,eAAeJ,gBAAgB,CAAC;AAC9B4B,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEXxB,UAFW,CAAf","sourcesContent":["import React from \"react\";\r\nimport {Map, GoogleApiWrapper, Marker} from \"google-maps-react\"; /* , Marker*/\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction RentalsMap({locations, google, setHighLight, Location }) { /*, setHighLight*/\r\n\r\n  const [center, setCenter] = useState();\r\n\r\n  useEffect(() => {\r\n    var arr = Object.keys(locations);\r\n    var getLat = (key) => locations[key][\"lat\"];\r\n    var avgLat = arr.reduce((a, c) => a + Number(getLat(c)), 0) / arr.length;\r\n    \r\n    var getLng = (key) => locations[key][\"lng\"];\r\n    var avgLng = arr.reduce((a, c) => a + Number(getLng(c)), 0) / arr.length;\r\n\r\n    setCenter({lat: avgLat, lng: avgLng});\r\n\r\n  }, [locations]);\r\n\r\n  return (\r\n    <>\r\n      {center && (\r\n        <Map \r\n        google = {google}\r\n        containerStyle = {{\r\n          width: \"50vw\",\r\n          height: \"calc(100vh - 135px)\",\r\n        }}\r\n        center = {center}\r\n        initialCenter = {locations[0]}\r\n        zoom = {13}\r\n        disableDefaultUI = {true}\r\n      >\r\n        {/* {Location.map((cords, i) => (\r\n          <Marker position = {cords} onClick = {() => setHighLight(i)} />\r\n        ))} */}\r\n      </Map>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyAhp37ovli2YMXo6gxLQK2z8ZG91S3SgXM\"\r\n}) (RentalsMap);\r\n"]},"metadata":{},"sourceType":"module"}